PATHSAMPLE version r35177                                                                 
*************************************************************************************************
debug printing is ON
Running on          1 processors for shared memory, single node setup
Number of jobs per processor=         1
Sleep times between OPTIM job submissions (s)=     1.000000000         1.000000000    
finite system (not bulk)
OPTIM system symbol: UN
number of atoms=    2
minimum number of connections for minima=         1
maximum number of ts searches to achieve this minimum value=        10
random number seed=         1
initial perturbation parameter single-ended transition state searches=        0.90000
energy difference  criterion for distinguishing stationary points=    0.1000000000E-03
distance criterion for distinguishing stationary points=    0.5000000000E+00
inertia difference criterion for setup check=    0.5000000000E+02
sampling direction is a<-b
OPTIM executable: /home/djs244/A12OPTIM_ifort_17-10-17                                            
Temperature=        0.59200
Performing k-th shortest path analysis to find the most important paths
Rate calculation will iteratively remove minima with     0 connections or fewer
path.info files will be read as min-sad-min triples
*************************************************************************************************
setup> there are          1 A minima at locations:
        10
setup> locations read for          1 min of type A
setup> there are          1 B minima at locations:
     1
setup> locations read for          1 min of type B
setup> parameters read for         10 min
setup> parameters read for          9 ts
setup> Setting up ts pointers
setup> Calculating rate constants
DISTANCET,DISTANCETST,DISTANCETO1,DISTANCETO2=    F    F         1         1
main> time spent in setup=        0.00000
getnconn> number of connections for minimum          1 is          1
getnconn> number of connections for minimum          2 is          2
getnconn> number of connections for minimum          3 is          2
getnconn> number of connections for minimum          4 is          2
getnconn> number of connections for minimum          5 is          2
getnconn> number of connections for minimum          6 is          2
getnconn> number of connections for minimum          7 is          2
getnconn> number of connections for minimum          8 is          2
getnconn> number of connections for minimum          9 is          2
getnconn> number of connections for minimum         10 is          1
getnconn> max connections:          2 for min          2 # of zeros=         0 after removing minima with <          1
RATECONST_SETUP>       0 minima with        0 connections or fewer will not be considered
kshortestpaths> steps to A region converged in        9 cycles; maximum=       9 disconnected=       0
kshortestpaths> steps to B region converged in        1 cycles; maximum=       9 disconnected=       0
 kshortestpaths> setting up the edge weights, transition rates and other quantit
 ies
 kshortestpaths> writing edge information for debugging...
 id:           1 l:  0.000000000000000E+000 ds: -0.187685810810811      t:
   5.75852358955438     
 id:          10 l:  0.000000000000000E+000 ds:  0.000000000000000E+000 t:
   1.00000000000000     
 id:           2 l:  0.582489732149203      ds: -0.187685810810811      t:
   5.49185222406338     
 id:          11 l:  0.802400058082148      ds:  0.187685810810811      t:
   6.62566928462637     
 id:           3 l:  0.594663571595661      ds: -0.187685810810811      t:
   5.38283347838837     
 id:          12 l:  0.783387319395794      ds:  0.187685810810811      t:
   6.49414313912988     
 id:           4 l:  0.610380562639038      ds: -0.187685810810811      t:
   5.46243116206393     
 id:          13 l:  0.800630518663310      ds:  0.187685810810811      t:
   6.59017411489898     
 id:           5 l:  0.596103491636283      ds: -0.187702702702703      t:
   5.37120749267862     
 id:          14 l:  0.774894559821785      ds:  0.187702702702703      t:
   6.48022637986487     
 id:           6 l:  0.617580370632596      ds: -0.187685810810811      t:
   5.53693587021877     
 id:          15 l:  0.733771309487275      ds:  0.187685810810811      t:
   6.68006064793762     
 id:           7 l:  0.654109147325113      ds: -0.187685810810811      t:
   6.16855679887419     
 id:          16 l:  0.812563242400310      ds:  0.187685810810811      t:
   7.44208249699295     
 id:           8 l:  0.586482161319228      ds: -0.187685810810811      t:
   5.93620258870390     
 id:          17 l:  0.806638640824933      ds:  0.187685810810811      t:
   7.16175773757329     
 id:           9 l:  0.591233235419528      ds: -0.187685810810811      t:
   5.77391314971657     
 id:          18 l:  0.000000000000000E+000 ds:  0.000000000000000E+000 t:
   1.00000000000000     
 kshortestpaths> debug> entropy flow of shortest path to node           2 is:
 -0.187685810810811     
 kshortestpaths> debug> entropy flow of shortest path to node           3 is:
 -0.375371621621622     
 kshortestpaths> debug> entropy flow of shortest path to node           4 is:
 -0.563057432432433     
 kshortestpaths> debug> entropy flow of shortest path to node           5 is:
 -0.750743243243243     
 kshortestpaths> debug> entropy flow of shortest path to node           6 is:
 -0.938445945945946     
 kshortestpaths> debug> entropy flow of shortest path to node           7 is:
  -1.12613175675676     
 kshortestpaths> debug> entropy flow of shortest path to node           8 is:
  -1.31381756756757     
 kshortestpaths> debug> entropy flow of shortest path to node           9 is:
  -1.50150337837838     
 kshortestpaths> debug> entropy flow of shortest path to node          10 is:
  -1.68918918918919     
 kshortestpaths> weight of the first shortest path:   4.83304227271665     
 kshortestpaths> dynamical activity of the first shortest path:           9
 kshortestpaths> entropy flow of the first shortest path:
  -1.68918918918919     
 kshortestpaths> average time elapsed for the first shortest path:
   50.8824563542621     
 in nextpath() with k=           2 changes in path variables:
     l:  0.806638640824933      s:  0.187685810810811      t:
   7.16175773757329     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in nextpath() with k=           2 changes in path variables:
     l:  0.812563242400310      s:  0.187685810810811      t:
   7.44208249699295     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in nextpath() with k=           2 changes in path variables:
     l:  0.733771309487275      s:  0.187685810810811      t:
   6.68006064793762     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in nextpath() with k=           2 changes in path variables:
     l:  0.774894559821785      s:  0.187702702702703      t:
   6.48022637986487     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in nextpath() with k=           2 changes in path variables:
     l:  0.800630518663310      s:  0.187685810810811      t:
   6.59017411489898     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in nextpath() with k=           2 changes in path variables:
     l:  0.783387319395794      s:  0.187685810810811      t:
   6.49414313912988     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in nextpath() with k=           2 changes in path variables:
     l:  0.802400058082148      s:  0.187685810810811      t:
   6.62566928462637     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.62566928462637     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.187685810810811     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.49185222406338     
 entropy flow of path was: -0.187685810810811     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.49414313912988     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.375371621621622     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.38283347838837     
 entropy flow of path was: -0.375371621621622     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.44208249699295     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.59017411489898     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.563057432432433     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.46243116206393     
 entropy flow of path was: -0.563057432432433     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187702702702703      tweight=
   6.48022637986487     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now: -0.750743243243243     
 in add_candidate(), sweight= -0.187702702702703      tweight=
   5.37120749267862     
 entropy flow of path was: -0.750743243243243     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   6.68006064793762     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now: -0.938445945945946     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.53693587021877     
 entropy flow of path was: -0.938445945945946     
 entropy flow of path is now:  -1.12613175675676     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   6.16855679887419     
 entropy flow of path was:  -1.12613175675676     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 in add_candidate(), sweight=  0.187685810810811      tweight=
   7.16175773757329     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.31381756756757     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.93620258870390     
 entropy flow of path was:  -1.31381756756757     
 entropy flow of path is now:  -1.50150337837838     
 in add_candidate(), sweight= -0.187685810810811      tweight=
   5.77391314971657     
 entropy flow of path was:  -1.50150337837838     
 entropy flow of path is now:  -1.68918918918919     
 kshortestpaths> shortest path:            1  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1382691394E-02 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:            2  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.3579650960E-03 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:            3  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.3510010143E-03 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:            4  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.3485341698E-03 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:            5  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.3461587118E-03 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:            6  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.3433211692E-03 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:            7  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.3372336735E-03 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:            8  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.3189756523E-03 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:            9  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.9267361502E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           10  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.9087068329E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           11  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.9087068329E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           12  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.9023204171E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           13  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8961705916E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           14  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8910282694E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           15  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8888244753E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           16  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8847660990E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           17  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8787359162E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           18  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8785479393E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           19  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8730645523E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           20  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8725601368E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           21  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8725601368E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           22  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8715327159E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           23  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8666131446E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           24  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8654075608E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           25  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8595093174E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           26  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8560793966E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           27  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8560793966E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           28  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8524637220E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           29  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8500628478E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           30  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8500628478E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           31  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8442691874E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           32  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8373485187E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           33  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8257963453E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           34  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8257963453E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           35  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8225013262E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           36  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8097307755E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           37  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.8040399660E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           38  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.7985599776E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           39  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.7920139979E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           40  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.7920139979E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           41  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.7779706407E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           42  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.7358508717E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           43  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2399228030E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           44  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2352551914E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           45  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2352551914E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           46  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2352551914E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           47  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2336018117E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           48  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2320096828E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           49  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2306783866E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           50  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2306783866E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           51  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2306783866E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           52  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2301078461E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           53  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2290571728E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           54  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2290571728E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           55  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2274960182E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           56  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2274960182E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           57  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2274473528E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           58  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2261906219E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           59  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2260277583E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           60  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2258971701E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           61  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2258971701E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           62  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2256311810E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           63  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2256311810E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           64  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2246009481E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           65  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2243575528E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           66  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2240454391E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           67  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2230701653E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           68  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2230224467E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           69  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2225184424E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           70  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2216304699E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           71  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2216304699E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           72  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2216304699E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           73  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2216304699E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           74  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2215024222E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           75  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2215024222E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           76  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2214550390E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           77  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2212416079E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           78  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2206944075E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           79  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2200728450E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           80  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2200728450E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           81  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2199927576E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           82  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2199456973E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           83  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2199456973E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           84  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2199456973E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           85  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2196867159E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           86  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2185729238E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           87  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2184466426E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           88  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2184466426E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           89  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2184466426E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           90  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2181894264E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           91  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2181427519E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           92  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2173187291E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           93  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2173187291E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           94  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2173187291E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           95  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2169578049E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           96  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2167812312E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           97  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2166559853E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           98  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2166559853E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:           99  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2164008775E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          100  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2157914072E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          101  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2157914072E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          102  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2157914072E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          103  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2157914072E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          104  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2151793519E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          105  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2148800064E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          106  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2143206664E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          107  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2143206664E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          108  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2142748195E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          109  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2142748195E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          110  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2142748195E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          111  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2137904881E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          112  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2137904881E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          113  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2137904881E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          114  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2134154772E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          115  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2129374403E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          116  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2128144151E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          117  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2128144151E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          118  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2128144151E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          119  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2128144151E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          120  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2125638306E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          121  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2125638306E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          122  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2116660615E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          123  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2113639641E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          124  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2110699264E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          125  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2110699264E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          126  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2096313651E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          127  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2096312713E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          128  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2096312713E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          129  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2096312713E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          130  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2096312713E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          131  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2087948192E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          132  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2087948192E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          133  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2087948192E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          134  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2081579771E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          135  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2081579771E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          136  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2079129686E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          137  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2073274037E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          138  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2073274037E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          139  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2073274037E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          140  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2067392624E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          141  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2067392624E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          142  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2059143498E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          143  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2055529706E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          144  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2050445732E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          145  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2050445732E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          146  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2050445732E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          147  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2050445732E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          148  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2042264226E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          149  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2041083388E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          150  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2027172247E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          151  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2026738600E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          152  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2014088872E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          153  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2014088872E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          154  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2012925227E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          155  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2012925227E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          156  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2010555050E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          157  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2010555050E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          158  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.2006052434E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          159  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1999205999E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          160  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1996424816E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          161  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1996424816E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          162  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1982818048E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          163  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1982818048E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          164  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1974905500E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          165  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1974905500E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          166  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1966564433E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          167  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1966564433E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          168  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1966564433E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          169  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1961025812E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          170  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1961025812E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          171  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1947660309E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          172  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1931694889E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          173  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1931694889E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          174  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1905044965E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          175  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1905044965E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          176  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1905044965E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          177  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1897443624E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          178  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1867983003E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          179  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1854854769E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          180  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1842212881E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          181  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1827111839E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          182  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1827111839E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          183  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1827111839E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          184  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1794714957E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          185  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1697548077E-04 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          186  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.6211363544E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          187  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.6090523708E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          188  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.6090523708E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          189  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.6090523708E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          190  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.6090523708E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          191  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.6047719346E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          192  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.6006500708E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          193  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5972034768E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          194  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5972034768E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          195  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5972034768E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          196  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5972034768E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          197  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5972034768E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          198  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5972034768E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          199  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5957264041E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          200  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5930063149E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          201  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5930063149E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          202  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5930063149E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          203  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5889646405E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          204  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5889646405E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          205  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5889646405E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          206  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5888386507E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          207  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5855850987E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          208  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5855850987E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          209  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5855850987E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          210  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5855850987E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          211  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5851634612E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          212  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5848253813E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          213  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5848253813E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          214  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5841367619E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          215  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5841367619E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          216  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5841367619E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          217  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5814695911E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          218  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5814695911E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          219  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5814695911E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          220  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5808394646E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          221  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5800314332E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          222  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5775065460E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          223  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5775065460E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          224  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5775065460E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          225  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5773830073E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          226  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5773830073E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          227  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5760781900E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          228  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5741927520E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          229  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5737793172E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          230  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5737793172E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          231  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5737793172E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          232  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5737793172E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          233  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5737793172E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          234  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5737793172E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          235  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5734478146E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          236  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5734478146E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          237  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5734478146E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          238  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5734478146E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          239  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5733251441E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          240  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5727725921E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          241  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5727725921E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          242  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5727725921E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          243  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5713559447E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          244  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5701573100E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          245  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5697467809E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          246  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5697467809E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          247  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5695394425E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          248  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5695394425E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          249  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5694176081E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          250  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5694176081E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          251  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5694176081E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          252  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5687471310E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          253  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5687471310E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          254  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5662713646E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          255  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5661502293E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          256  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5658636334E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          257  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5655367041E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          258  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5655367041E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          259  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5655367041E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          260  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5648707968E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          261  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5648707968E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          262  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5647499611E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          263  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5626166477E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          264  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5626166477E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          265  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5626166477E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          266  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5626166477E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          267  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5626166477E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          268  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5626166477E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          269  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5626166477E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          270  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5626166477E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          271  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5626166477E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          272  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5622915944E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          273  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5622915944E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          274  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5621713104E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          275  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5616822507E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          276  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5616295080E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          277  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5612251192E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          278  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5609008698E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          279  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5609008698E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          280  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5602404210E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          281  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5602404210E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          282  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5586625629E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          283  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5586625629E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          284  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5586625629E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          285  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5586625629E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          286  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5586625629E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          287  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5586625629E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          288  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5586625629E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          289  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5586625629E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          290  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5584592582E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          291  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5583397941E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          292  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5583397941E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          293  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5583397941E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          294  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5582203555E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          295  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5576823609E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          296  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5570780122E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          297  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5563030364E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          298  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5548549607E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          299  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5548549607E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          300  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5548549607E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          301  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5548549607E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          302  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5547362676E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          303  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5547362676E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          304  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5547362676E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          305  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5545343917E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          306  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5545343917E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          307  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5545343917E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          308  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5544157671E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          309  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5544157671E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          310  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5544157671E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          311  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5544157671E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          312  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5538814393E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          313  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5537629544E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          314  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5534823815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          315  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5534823815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          316  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5534823815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          317  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5534823815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          318  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5525115157E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          319  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5516711439E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          320  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5516711439E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          321  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5516711439E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          322  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5516711439E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          323  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5512739253E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          324  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5509554253E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          325  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5509554253E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          326  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5509554253E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          327  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5509554253E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          328  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5507549253E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          329  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5506371092E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          330  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5506371092E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          331  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5506371092E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          332  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5506371092E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          333  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5506371092E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          334  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5506371092E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          335  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5503066870E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          336  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5503066870E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          337  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5503066870E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          338  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5503066870E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          339  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5499887458E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          340  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5499887458E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          341  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5498710936E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          342  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5493411458E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          343  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5479824518E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          344  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5477939844E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          345  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5477939844E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          346  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5477939844E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          347  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5477939844E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          348  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5477939844E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          349  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5477939844E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          350  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5472003515E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          351  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5468842050E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          352  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5468842050E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          353  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5468842050E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          354  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5468842050E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          355  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5464391170E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          356  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5464391170E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          357  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5462402605E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          358  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5461234102E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          359  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5461234102E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          360  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5461234102E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          361  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5454803616E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          362  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5440604577E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          363  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5440604577E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          364  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5440604577E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          365  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5439440737E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          366  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5439440737E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          367  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5439440737E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          368  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5439440737E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          369  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5439440737E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          370  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5439440737E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          371  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5431568789E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          372  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5427148245E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          373  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5427145815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          374  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5427145815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          375  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5427145815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          376  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5427145815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          377  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5427145815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          378  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5427145815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          379  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5427145815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          380  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5427145815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          381  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5427145815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          382  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5424012694E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          383  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5424012694E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          384  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5424012694E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          385  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5417626036E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          386  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5416467111E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          387  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5405490901E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          388  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5405490901E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          389  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5405490901E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          390  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5405490901E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          391  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5405490901E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          392  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5405490901E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          393  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5402367863E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          394  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5402367863E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          395  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5402367863E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          396  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5402367863E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          397  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5402367863E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          398  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5402367863E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          399  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5402367863E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          400  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5402367863E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          401  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5401212203E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          402  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5401212203E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          403  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5401212203E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          404  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5401212203E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          405  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5396006691E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          406  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5396006691E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          407  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5396006691E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          408  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5389003690E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          409  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5389003690E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          410  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5389003690E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          411  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5387044971E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          412  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5382660663E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          413  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5379550815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          414  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5379550815E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          415  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5373216509E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          416  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5367500967E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          417  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5367500967E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          418  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5367500967E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          419  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5365547662E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          420  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5365547662E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          421  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5364399878E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          422  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5364399878E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          423  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5364399878E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          424  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5364399878E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          425  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5364399878E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          426  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5364399878E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          427  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5364399878E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          428  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5364399878E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          429  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5364399878E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          430  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5358083412E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          431  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5358083412E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          432  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5358083412E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          433  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5358083412E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          434  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5352274573E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          435  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5352274573E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          436  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5352274573E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          437  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5342886125E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          438  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5335453401E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          439  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5330918404E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          440  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5327838450E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          441  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5327838450E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          442  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5327838450E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          443  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5327838450E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          444  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5327838450E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          445  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5327838450E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          446  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5321565035E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          447  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5321565035E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          448  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5321562652E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          449  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5321562652E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          450  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5321562652E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          451  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5321562652E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          452  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5321562652E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          453  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5321562652E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          454  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5320426659E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          455  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5320426659E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          456  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5320426659E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          457  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5308400748E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          458  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5308400748E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          459  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5308400748E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          460  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5308400748E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          461  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5308400748E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          462  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5308400748E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          463  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5300329027E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          464  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5300329027E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          465  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5300329027E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          466  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5300329027E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          467  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5300329027E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          468  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5300329027E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          469  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5299089260E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          470  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5291526209E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          471  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5287219640E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          472  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5284164934E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          473  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5284164934E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          474  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5284164934E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          475  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5284164934E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          476  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5284162568E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          477  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5284162568E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          478  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5284162568E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          479  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5284162568E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          480  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5277942943E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          481  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5277942943E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          482  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5263078173E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          483  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5263078173E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          484  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5263078173E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          485  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5263078173E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          486  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5263078173E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          487  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5263078173E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          488  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5263078173E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          489  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5263078173E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          490  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5263078173E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          491  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5255651407E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          492  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5248150353E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          493  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5248148003E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          494  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5248148003E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          495  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5248148003E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          496  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5248148003E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          497  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5247025333E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          498  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5247025333E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          499  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5240849419E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          500  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5240849419E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          501  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5227207310E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          502  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5227207310E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          503  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5227207310E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          504  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5226089120E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          505  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5226089120E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          506  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5226089120E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          507  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5226089120E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          508  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5226089120E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          509  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5226089120E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          510  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5218033572E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          511  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5214276443E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          512  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5214276443E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          513  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5214276443E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          514  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5211263880E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          515  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5211263880E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          516  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5211263880E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          517  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5211263880E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          518  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5205130058E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          519  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5205127728E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          520  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5205127728E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          521  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5205127728E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          522  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5205127728E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          523  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5205127728E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          524  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5205127728E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          525  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5205127728E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          526  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5205127728E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          527  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5193470901E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          528  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5190470358E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          529  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5190470358E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          530  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5190470358E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          531  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5190470358E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          532  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5190470358E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          533  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5190470358E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          534  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5184358690E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          535  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5184358690E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          536  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5184358690E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          537  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5181361093E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          538  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5175746160E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          539  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5175746160E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          540  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5168545952E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          541  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5168545952E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          542  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5168545952E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          543  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5168545952E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          544  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5162462410E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          545  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5155094359E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          546  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5147922879E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          547  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5147922879E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          548  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5147922879E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          549  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5146047178E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          550  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5144946349E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          551  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5133319379E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          552  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5133319379E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          553  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5133319379E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          554  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5133319379E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          555  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5112836865E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          556  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5112834576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          557  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5112834576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          558  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5112834576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          559  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5112834576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          560  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5112834576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          561  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5112834576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          562  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5112834576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          563  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5112834576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          564  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5109880622E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          565  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5109880622E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          566  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5108787529E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          567  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5103863847E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          568  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5103863847E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          569  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5092433799E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          570  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5092433799E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          571  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5092433799E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          572  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5092433799E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          573  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5091240380E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          574  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5091240380E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          575  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5091240380E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          576  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5091240380E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          577  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5091240380E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          578  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5091240380E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          579  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5076901439E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          580  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5076901439E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          581  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5076901439E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          582  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5076901439E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          583  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5075053887E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          584  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5073968245E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          585  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5073968245E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          586  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5073968245E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          587  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5070925766E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          588  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5067993756E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          589  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5067993756E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          590  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5056644038E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          591  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5056644038E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          592  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5056644038E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          593  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5056644038E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          594  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5042299476E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          595  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5042299476E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          596  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5039386273E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          597  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5039386273E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          598  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5039386273E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          599  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5033452504E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          600  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5033452504E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          601  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5032375761E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          602  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5032375761E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          603  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5022180141E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          604  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5013366225E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          605  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5013366225E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          606  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5013366225E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          607  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5005039997E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          608  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5000966588E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          609  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5000966588E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          610  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5000966588E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          611  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.5000966588E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          612  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4998077265E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          613  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4998077265E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          614  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4998077265E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          615  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4998077265E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          616  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4992192136E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          617  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4992192136E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          618  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4992192136E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          619  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4981012176E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          620  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4978132154E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          621  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4978132154E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          622  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4978132154E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          623  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4978132154E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          624  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4964012534E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          625  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4964012534E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          626  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4957106877E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          627  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4957106877E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          628  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4957106877E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          629  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4944203360E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          630  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4944203360E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          631  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4943145709E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          632  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4943145709E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          633  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4943145709E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          634  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4931972576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          635  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4931972576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          636  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4931972576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          637  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4931972576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          638  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4931972576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          639  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4931972576E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          640  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4923321382E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          641  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4923321382E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          642  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4923321382E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          643  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4912293458E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          644  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4912293458E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          645  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4909455367E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          646  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4909455367E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          647  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4909455367E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          648  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4909455367E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          649  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4903674588E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          650  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4903674588E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          651  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4903674588E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          652  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4903674588E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          653  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4892692862E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          654  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4882963785E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          655  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4882963785E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          656  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4882963785E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          657  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4882963785E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          658  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4875994644E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          659  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4869211433E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          660  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4869211433E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          661  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4869211433E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          662  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4869211433E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          663  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4836024995E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          664  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4836024995E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          665  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4836022830E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          666  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4836022830E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          667  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4836022830E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          668  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4836022830E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          669  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4836022830E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          670  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4836022830E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          671  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4816726562E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          672  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4816726562E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          673  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4816726562E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          674  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4802035133E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          675  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4802035133E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          676  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4802035133E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          677  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4796382986E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          678  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4796382986E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          679  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4796382986E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          680  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4782874480E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          681  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4782874480E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          682  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4782874480E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          683  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4769306540E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          684  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4769306540E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          685  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4769306540E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          686  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4750276477E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          687  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4741939752E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          688  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4730211438E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          689  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4730211438E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          690  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4730211438E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          691  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4730211438E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          692  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4730211438E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          693  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4730211438E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          694  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4730211438E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          695  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4730211438E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          696  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4730211438E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          697  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4711337369E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          698  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4711337369E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          699  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4708613273E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          700  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4676521403E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          701  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4675521013E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          702  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4646339121E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          703  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4646339121E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          704  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4646339121E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          705  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4643654686E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          706  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4643654686E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          707  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4638186882E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          708  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4638186882E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          709  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4638186882E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          710  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4627799712E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          711  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4612005545E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          712  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4605589581E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          713  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4605589581E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          714  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4605589581E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          715  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4574199875E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          716  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4574199875E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          717  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4574199875E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          718  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4555946271E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          719  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4555946271E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          720  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4536704108E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          721  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4536704108E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          722  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4536704108E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          723  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4536704108E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          724  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4536704108E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          725  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4536704108E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          726  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4523926959E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          727  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4523926959E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          728  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4493093831E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          729  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4456262908E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          730  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4456262908E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          731  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4456262908E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          732  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4394783702E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          733  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4394783702E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          734  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4394783702E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          735  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4394783702E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          736  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4377248027E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          737  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4309284771E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          738  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4278999003E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          739  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4249835198E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          740  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4214998322E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          741  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4214998322E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          742  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4214998322E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          743  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4214998322E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          744  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.4140261351E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          745  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.3916105268E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          746  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1608060451E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          747  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1576776216E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          748  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1576776216E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          749  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1576776216E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          750  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1576776216E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          751  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1576776216E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          752  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1565694590E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          753  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1555023494E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          754  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1546100603E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          755  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1546100603E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          756  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1546100603E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          757  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1546100603E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          758  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1546100603E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          759  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1546100603E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          760  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1546100603E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          761  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1546100603E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          762  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1546100603E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          763  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1546100603E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          764  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1542276609E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          765  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1535234567E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          766  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1535234567E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          767  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1535234567E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          768  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1535234567E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          769  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1524771073E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          770  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1524771073E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          771  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1524771073E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          772  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1524771073E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          773  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1524444898E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          774  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1516021774E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          775  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1516021774E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          776  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1516021774E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          777  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1516021774E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          778  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1516021774E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          779  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1516021774E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          780  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1516021774E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          781  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1516021774E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          782  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1516021774E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          783  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1516021774E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          784  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1514930196E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          785  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1514054941E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          786  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1514054941E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          787  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1512272174E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          788  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1512272174E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          789  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1512272174E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          790  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1512272174E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          791  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1505367133E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          792  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1505367133E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          793  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1505367133E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          794  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1505367133E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          795  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1505367133E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          796  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1505367133E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          797  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1503735798E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          798  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1501643885E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          799  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1495107202E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          800  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1495107202E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          801  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1495107202E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          802  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1495107202E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          803  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1495107202E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          804  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1495107202E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          805  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1494787372E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          806  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1494787372E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          807  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1494787372E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          808  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1491409330E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          809  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1486528118E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          810  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1486528118E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          811  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1486528118E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          812  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1486528118E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          813  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1486528118E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          814  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1485457776E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          815  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1485457776E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          816  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1485457776E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          817  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1485457776E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          818  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1485457776E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          819  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1485457776E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          820  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1485457776E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          821  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1485457776E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          822  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1484599549E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          823  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1484599549E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          824  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1484599549E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          825  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1484599549E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          826  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1484599549E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          827  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1484599549E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          828  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1484281967E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          829  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1482851465E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          830  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1482851465E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          831  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1482851465E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          832  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1482851465E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          833  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1482851465E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          834  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1482851465E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          835  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1479183905E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          836  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1476080759E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          837  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1476080759E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          838  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1476080759E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          839  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1476080759E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          840  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1475017939E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          841  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1475017939E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          842  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1474481161E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          843  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1474481161E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          844  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1474481161E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          845  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1474165744E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          846  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1474165744E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          847  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1474165744E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          848  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1472429945E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          849  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1472429945E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          850  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1472429945E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          851  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1466020431E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          852  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1466020431E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          853  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1466020431E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          854  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1466020431E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          855  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1465706824E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          856  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1465706824E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          857  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1465706824E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          858  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1464964855E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          859  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1464118468E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          860  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1464118468E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          861  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1464118468E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          862  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1462394500E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          863  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1462394500E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          864  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1462394500E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          865  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1462081668E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          866  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1457608250E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          867  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          868  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          869  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          870  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          871  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          872  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          873  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          874  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          875  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          876  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          877  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          878  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          879  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          880  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          881  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          882  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          883  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          884  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1456558731E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          885  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1455717200E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          886  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1455717200E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          887  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1455717200E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          888  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1455717200E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          889  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1455717200E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          890  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1455717200E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          891  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1455405797E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          892  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1455405797E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          893  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1454139670E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          894  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1454003125E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          895  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1454003125E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          896  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1454003125E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          897  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1454003125E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          898  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1452956202E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          899  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1452116752E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          900  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1452116752E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          901  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1450406916E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          902  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1450406916E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          903  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1450406916E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          904  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1447364140E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          905  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1446321998E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          906  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1446321998E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          907  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1446321998E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          908  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1446321998E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          909  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1446321998E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          910  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1446321998E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          911  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1446321998E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          912  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1446321998E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          913  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1446321998E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          914  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1446321998E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          915  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1446321998E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          916  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1446321998E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          917  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1445795662E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          918  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1445795662E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          919  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1445795662E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          920  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1445486381E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          921  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1445486381E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          922  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1445486381E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          923  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1445486381E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          924  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1445486381E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          925  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1445486381E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          926  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1445177166E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          927  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1443784352E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          928  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1443784352E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          929  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1443784352E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          930  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1442219753E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          931  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1440213417E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          932  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1437499533E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          933  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1437192026E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          934  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1436464493E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          935  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1436464493E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          936  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1436464493E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          937  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1436464493E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          938  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1436464493E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          939  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1436464493E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          940  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1436157208E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          941  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1436157208E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          942  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1436157208E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          943  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1435634572E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          944  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1435634572E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          945  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1435634572E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          946  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1435634572E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          947  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1435634572E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          948  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1435634572E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          949  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1435327464E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          950  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1435327464E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          951  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1435327464E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          952  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1435327464E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          953  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1433944143E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          954  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1433944143E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          955  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1433944143E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          956  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1433637397E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          957  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1433637397E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          958  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1432911021E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          959  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1432911021E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          960  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1432911021E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          961  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1432911021E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          962  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1432911021E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          963  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1430397546E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          964  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          965  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          966  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          967  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          968  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          969  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          970  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          971  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          972  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          973  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          974  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          975  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          976  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          977  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          978  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          979  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1428221907E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          980  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1427396748E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          981  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1427396748E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          982  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1427193547E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          983  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1427091403E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          984  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1426368982E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          985  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1426368982E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          986  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1426368982E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          987  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1426368982E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          988  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1425849908E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          989  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1425849908E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          990  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1425716019E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          991  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1425544894E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          992  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1425544894E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          993  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1425544894E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          994  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1425544894E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          995  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1425544894E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          996  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1425544894E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          997  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1424689463E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          998  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1424689463E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:          999  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1424689463E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 kshortestpaths> shortest path:         1000  for start min            1 
  and end min           10
kshortestpaths> kth best path for minimum     10 and B minimum      1 k^SS=    0.1424689463E-05 steps=       9
 kshortestpaths> I am going to write the path actions
 quack
 MFPT> J1-1,tau,b+,b-,sum=           8   5.79586386523051     
  0.263990954392376       0.736009045607624        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           7   8.45915224255634     
  0.181703694153352       0.818296305846648        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           6   10.6835228128336     
  0.128991525305171       0.871008474694829        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           5   13.2094399722129     
  9.927352068088294E-002  0.900726479319117        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           4   16.8242177400901     
  8.397391969049196E-002  0.916026080309508        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           3   18.1409770247515     
  6.277714084554091E-002  0.937222859154459        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           2   19.4167166043208     
  4.817368416801933E-002  0.951826315831981        1.00000000000000     
 MFPT> J1-1,tau,b+,b-,sum=           1   547.657502008705     
   1.00000000000000       0.000000000000000E+000   1.00000000000000     
kshortestpaths> detailed balance, ratio should be one if SS applies:      1.661108068    
kshortestpaths> MFPT for this path: A<-B value=     167.9969453     B<-A value=     547.6575020    
kshortestpaths> rates without conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> rates with    conditional probability: A<-B value=    0.5952489184E-02 B<-A value=    0.1825958736E-02
kshortestpaths> Note that path is printed backwards starting with A, ending with B
kshortestpaths> dumping minima and transition state coordinates to file redopoints.fastest.xxx, steps=     9
 
kshortestpaths> Best path (chosen on GT rate constant weighted by conditional occupation probability) between any B minimum and any A minimum:
      10       9       8       7       6       5       4       3       2       1
kshortestpaths> Largest contribution to rate constant A<-B for any A and B is     0.5952489184E-02 for      9 transition states
